// <auto-generated />
using System;
using Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(IgaDbContext))]
    partial class IgaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.Dynamic.DynamicAttributeDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("DataType")
                        .HasColumnType("int")
                        .HasColumnName("DataType");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("DisplayName");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit")
                        .HasColumnName("IsRequired");

                    b.Property<int>("KeyType")
                        .HasColumnType("int")
                        .HasColumnName("keyType");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("int")
                        .HasColumnName("MaxLength");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("SystemName");

                    b.Property<string>("TargetEntity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttributeDefinitions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a56161ba-6f0f-4c35-bf93-93f94e69eca1"),
                            DataType = 0,
                            DisplayName = "Business Key",
                            IsRequired = true,
                            KeyType = 0,
                            MaxLength = 64,
                            SystemName = "BUSINESSKEY"
                        },
                        new
                        {
                            Id = new Guid("7e8a804f-4945-4ce8-98a2-3c2560d45748"),
                            DataType = 0,
                            DisplayName = "Identity Id",
                            IsRequired = true,
                            KeyType = 0,
                            MaxLength = 64,
                            SystemName = "IDENTITYID"
                        },
                        new
                        {
                            Id = new Guid("d2ebb9c6-14d5-4927-b80e-88c06533c504"),
                            DataType = 0,
                            DisplayName = "First name",
                            IsRequired = true,
                            KeyType = 0,
                            MaxLength = 64,
                            SystemName = "FIRSTNAME"
                        },
                        new
                        {
                            Id = new Guid("756d52d7-c5ef-4e71-baba-8a8014509a73"),
                            DataType = 0,
                            DisplayName = "Last name",
                            IsRequired = false,
                            KeyType = 0,
                            MaxLength = 64,
                            SystemName = "LASTNAME"
                        },
                        new
                        {
                            Id = new Guid("2e1b4696-a1ae-48df-a8cc-99de19dda5a6"),
                            DataType = 0,
                            DisplayName = "Email",
                            IsRequired = false,
                            KeyType = 0,
                            MaxLength = 256,
                            SystemName = "EMAIL"
                        },
                        new
                        {
                            Id = new Guid("ef9f5d79-c514-44ef-8f16-7bff193f7a47"),
                            DataType = 9,
                            DisplayName = "Identity",
                            IsRequired = false,
                            KeyType = 0,
                            SystemName = "IDENTITYREF",
                            TargetEntity = "Core.Domain.Entities.Identity, Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                        },
                        new
                        {
                            Id = new Guid("921c1e4c-ff5c-47df-a5f5-e8218cbed540"),
                            DataType = 9,
                            DisplayName = "OrgUnit",
                            IsRequired = false,
                            KeyType = 0,
                            SystemName = "OUREF",
                            TargetEntity = "Core.Domain.Entities.OrganizationUnit, Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                        },
                        new
                        {
                            Id = new Guid("0e842d9d-d341-4594-a119-78e0f9fc4ab3"),
                            DataType = 9,
                            DisplayName = "Manager",
                            IsRequired = false,
                            KeyType = 0,
                            SystemName = "MANAGER",
                            TargetEntity = "Core.Domain.Entities.Identity, Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AttrHash")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("AttrHash");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("Identity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedAt");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("Version");

                    b.HasKey("Id");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AttrHash")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("AttrHash");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedAt");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("Version");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.Identity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AttrHash")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("AttrHash");

                    b.Property<string>("BusinessKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("BusinessKey");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("IdentityID")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedAt");

                    b.Property<Guid>("OrganizationUnit")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("Version");

                    b.HasKey("Id");

                    b.HasIndex("BusinessKey")
                        .IsUnique();

                    b.ToTable("Identities", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.OrganizationUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AttrHash")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("AttrHash");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<Guid>("Manager")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedAt");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("Version");

                    b.HasKey("Id");

                    b.ToTable("Organizations", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("AttrHash")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("AttrHash");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifiedAt");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("int")
                        .HasColumnName("Version");

                    b.HasKey("Id");

                    b.ToTable("Resources", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
